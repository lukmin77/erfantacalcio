generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AlboTrofei {
  id          Int      @id(map: "PK_AlboTrofei") @default(autoincrement())
  stagione    String   @db.VarChar(9)
  nomeSquadra String   @db.VarChar(50)
  campionato  Boolean? @default(false)
  champions   Boolean? @default(false)
  secondo     Boolean? @default(false)
  terzo       Boolean? @default(false)
  presidente  String   @db.VarChar(50)
}

model Calendario {
  idCalendario    Int       @id(map: "PK_Calendario") @unique(map: "IX_Calendario_idCalendario") @default(autoincrement())
  giornata        Int       @db.SmallInt
  idTorneo        Int
  giornataSerieA  Int       @db.SmallInt
  ordine          Int       @db.SmallInt
  hasSovrapposta  Boolean   @default(false)
  hasGiocata      Boolean   @default(false)
  hasDaRecuperare Boolean   @default(false)
  data            DateTime? @default(now()) @db.Timestamptz(3)
  girone          Int?      @db.SmallInt
  dataFine        DateTime?
  Tornei          Tornei    @relation(fields: [idTorneo], references: [idTorneo], onUpdate: NoAction, map: "FK_Calendario_Tornei")
  Partite         Partite[]
  Voti            Voti[]
}

model Classifiche {
  id               Int    @id(map: "PK_Classifiche") @default(autoincrement())
  idSquadra        Int
  idTorneo         Int
  punti            Int    @db.SmallInt
  vinteCasa        Int    @db.SmallInt
  pareggiCasa      Int    @db.SmallInt
  perseCasa        Int    @db.SmallInt
  vinteTrasferta   Int    @db.SmallInt
  pareggiTrasferta Int    @db.SmallInt
  perseTrasferta   Int    @db.SmallInt
  golFatti         Int    @db.SmallInt
  golSubiti        Int    @db.SmallInt
  differenzaReti   Int
  giocate          Int    @db.SmallInt
  Tornei           Tornei @relation(fields: [idTorneo], references: [idTorneo], onUpdate: NoAction, map: "FK_Classifiche_Tornei")
  Utenti           Utenti @relation(fields: [idSquadra], references: [idUtente], onUpdate: NoAction, map: "FK_Classifiche_Utenti")
}

model Formazioni {
  idFormazione Int      @id(map: "PK_Formazioni") @unique(map: "IX_Formazioni_idFormazione") @default(autoincrement())
  idSquadra    Int
  idPartita    Int
  dataOra      DateTime @default(now()) @db.Timestamptz(3)
  modulo       String   @db.VarChar(5)
  hasBloccata  Boolean  @default(false)
  Partite      Partite  @relation(fields: [idPartita], references: [idPartita], onUpdate: NoAction, map: "FK_Formazioni_Partite")
  Utenti       Utenti   @relation(fields: [idSquadra], references: [idUtente], onUpdate: NoAction, map: "FK_Formazioni_Utenti")
  Voti         Voti[]

  @@unique([idSquadra, idPartita], map: "UNIQUE_Formazioni_ids")
}

model Giocatori {
  idGiocatore       Int             @id(map: "PK_Giocatori") @unique(map: "IX_Giocatori_idGiocatore") @default(autoincrement())
  id_pf             Int?
  ruolo             String          @db.VarChar(1)
  nome              String          @unique(map: "UNIQUE_GIOCATORI_NOME") @db.VarChar(50)
  nomeFantaGazzetta String?         @db.VarChar(500)
  Trasferimenti     Trasferimenti[]
  Voti              Voti[]
}

model Partite {
  idPartita                         Int          @id(map: "PK_Partita") @unique(map: "IX_Partite_idPartita") @default(autoincrement())
  idCalendario                      Int
  idSquadraH                        Int?
  idSquadraA                        Int?
  puntiH                            Int?         @db.SmallInt
  puntiA                            Int?         @db.SmallInt
  golH                              Int?         @db.SmallInt
  golA                              Int?         @db.SmallInt
  hasMultaH                         Boolean      @default(false)
  hasMultaA                         Boolean      @default(false)
  punteggioH                        Decimal?     @db.Decimal(9, 2)
  punteggioA                        Decimal?     @db.Decimal(9, 2)
  fattoreCasalingo                  Boolean      @default(false)
  Formazioni                        Formazioni[]
  Calendario                        Calendario   @relation(fields: [idCalendario], references: [idCalendario], onUpdate: NoAction, map: "FK_Partite_Calendario")
  Utenti_Partite_idSquadraHToUtenti Utenti?      @relation("Partite_idSquadraHToUtenti", fields: [idSquadraH], references: [idUtente], onDelete: NoAction, onUpdate: NoAction, map: "FK_Partite_SquadreCasa")
  Utenti_Partite_idSquadraAToUtenti Utenti?      @relation("Partite_idSquadraAToUtenti", fields: [idSquadraA], references: [idUtente], onDelete: NoAction, onUpdate: NoAction, map: "FK_Partite_SquadreTrasferta")
}

model SquadreSerieA {
  idSquadraSerieA Int             @id(map: "PK_SquadreSerieA") @unique(map: "IX_SquadreSerieA_idSquadraSerieA") @default(autoincrement())
  nome            String          @db.VarChar(50)
  maglia          String          @db.VarChar(50)
  Trasferimenti   Trasferimenti[]
}

model StatsA {
  id                Int      @id(map: "PK_StatsA") @unique(map: "IX_StatsA_id") @default(autoincrement())
  media             Decimal? @db.Decimal(38, 6)
  mediabonus        Decimal? @db.Decimal(38, 6)
  golfatti          Decimal? @db.Decimal(38, 6)
  golsubiti         Decimal? @db.Decimal(38, 1)
  ammonizioni       Decimal? @db.Decimal(38, 6)
  espulsioni        Decimal? @db.Decimal(38, 6)
  assist            Decimal? @db.Decimal(38, 1)
  giocate           Int?
  ruolo             String   @db.VarChar(1)
  nome              String   @db.VarChar(50)
  nomefantagazzetta String?  @db.VarChar(500)
  idgiocatore       Int
  maglia            String   @db.VarChar(50)
  squadraSerieA     String   @db.VarChar(50)
  squadra           String?  @db.VarChar(50)
  idSquadra         Int?
}

model StatsC {
  id                Int      @id(map: "PK_StatsC") @unique(map: "IX_StatsC_id") @default(autoincrement())
  media             Decimal? @db.Decimal(38, 6)
  mediabonus        Decimal? @db.Decimal(38, 6)
  golfatti          Decimal? @db.Decimal(38, 6)
  golsubiti         Decimal? @db.Decimal(38, 1)
  ammonizioni       Decimal? @db.Decimal(38, 6)
  espulsioni        Decimal? @db.Decimal(38, 6)
  assist            Decimal? @db.Decimal(38, 1)
  giocate           Int?
  ruolo             String   @db.VarChar(1)
  nome              String   @db.VarChar(50)
  nomefantagazzetta String?  @db.VarChar(500)
  idgiocatore       Int
  maglia            String   @db.VarChar(50)
  squadraSerieA     String   @db.VarChar(50)
  squadra           String?  @db.VarChar(50)
  idSquadra         Int?
}

model StatsD {
  id                Int      @id(map: "PK_StatsD") @unique(map: "IX_StatsD_id") @default(autoincrement())
  media             Decimal? @db.Decimal(38, 6)
  mediabonus        Decimal? @db.Decimal(38, 6)
  golfatti          Decimal? @db.Decimal(38, 6)
  golsubiti         Decimal? @db.Decimal(38, 1)
  ammonizioni       Decimal? @db.Decimal(38, 6)
  espulsioni        Decimal? @db.Decimal(38, 6)
  assist            Decimal? @db.Decimal(38, 1)
  giocate           Int?
  ruolo             String   @db.VarChar(1)
  nome              String   @db.VarChar(50)
  nomefantagazzetta String?  @db.VarChar(500)
  idgiocatore       Int
  maglia            String   @db.VarChar(50)
  squadraSerieA     String   @db.VarChar(50)
  squadra           String?  @db.VarChar(50)
  idSquadra         Int?
}

model StatsP {
  id                Int      @id(map: "PK_StatsP") @unique(map: "IX_StatsP_id") @default(autoincrement())
  media             Decimal? @db.Decimal(38, 6)
  mediabonus        Decimal? @db.Decimal(38, 6)
  golfatti          Decimal? @db.Decimal(38, 6)
  golsubiti         Decimal? @db.Decimal(38, 1)
  ammonizioni       Decimal? @db.Decimal(38, 6)
  espulsioni        Decimal? @db.Decimal(38, 6)
  assist            Decimal? @db.Decimal(38, 1)
  giocate           Int?
  ruolo             String   @db.VarChar(1)
  nome              String   @db.VarChar(50)
  nomefantagazzetta String?  @db.VarChar(500)
  idgiocatore       Int
  maglia            String   @db.VarChar(50)
  squadraSerieA     String   @db.VarChar(50)
  squadra           String?  @db.VarChar(50)
  idSquadra         Int?
}

model Tornei {
  idTorneo      Int           @id(map: "PK_Tornei") @unique(map: "IX_Tornei_idTorneo") @default(autoincrement())
  nome          String        @db.VarChar(50)
  gruppoFase    String?       @db.VarChar(50)
  hasClassifica Boolean
  Calendario    Calendario[]
  Classifiche   Classifiche[]
}

model Trasferimenti {
  idTrasferimento   Int            @id(map: "PK_Trasferimenti") @unique(map: "IX_Trasferimenti_idTrasferimento") @default(autoincrement())
  idGiocatore       Int
  idSquadraSerieA   Int?
  dataAcquisto      DateTime       @default(now()) @db.Timestamptz(3)
  dataCessione      DateTime?      @db.Timestamptz(3)
  idSquadra         Int?
  costo             Int            @db.SmallInt
  stagione          String         @db.VarChar(9)
  hasRitirato       Boolean        @default(false)
  nomeSquadraSerieA String?        @db.VarChar(50)
  nomeSquadra       String?        @db.VarChar(50)
  media             Decimal?       @db.Decimal(9, 2)
  gol               Int?           @db.SmallInt
  assist            Int?           @db.SmallInt
  giocate           Int?           @db.SmallInt
  Giocatori         Giocatori      @relation(fields: [idGiocatore], references: [idGiocatore], onUpdate: NoAction, map: "FK_Trasferimenti_Giocatori")
  SquadreSerieA     SquadreSerieA? @relation(fields: [idSquadraSerieA], references: [idSquadraSerieA], onDelete: NoAction, onUpdate: NoAction, map: "FK_Trasferimenti_SquadreSerieA")
  Utenti            Utenti?        @relation(fields: [idSquadra], references: [idUtente], onDelete: NoAction, onUpdate: NoAction, map: "FK_Trasferimenti_Utenti")
}

model Utenti {
  idUtente                           Int             @id(map: "PK_Utenti") @unique(map: "IX_Utenti_idUtente") @default(autoincrement())
  username                           String          @db.VarChar(50)
  pwd                                String          @db.VarChar(50)
  adminLevel                         Boolean         @default(false)
  presidente                         String          @db.VarChar(50)
  mail                               String          @db.VarChar(50)
  nomeSquadra                        String          @db.VarChar(50)
  foto                               String?         @db.VarChar(500)
  importoBase                        Decimal         @default(100) @db.Decimal(9, 2)
  importoMulte                       Decimal         @default(0) @db.Decimal(9, 2)
  importoMercato                     Decimal         @default(0) @db.Decimal(9, 2)
  fantaMilioni                       Decimal         @default(600) @db.Decimal(9, 2)
  Campionato                         Int             @default(0) @db.SmallInt
  Champions                          Int             @default(0) @db.SmallInt
  Secondo                            Int             @default(0) @db.SmallInt
  Terzo                              Int             @default(0) @db.SmallInt
  lockLevel                          Boolean         @default(false)
  Classifiche                        Classifiche[]
  Formazioni                         Formazioni[]
  Partite_Partite_idSquadraHToUtenti Partite[]       @relation("Partite_idSquadraHToUtenti")
  Partite_Partite_idSquadraAToUtenti Partite[]       @relation("Partite_idSquadraAToUtenti")
  Trasferimenti                      Trasferimenti[]

  @@unique([username, pwd], map: "IX_Utenti")
}

model Voti {
  idVoto       Int         @id(map: "PK_Voti") @unique(map: "IX_Voti_idVoto") @default(autoincrement())
  idGiocatore  Int
  idCalendario Int
  idFormazione Int?
  voto         Decimal?    @db.Decimal(5, 2)
  ammonizione  Decimal     @default(0) @db.Decimal(5, 1)
  espulsione   Decimal     @default(0) @db.Decimal(5, 1)
  gol          Decimal?    @default(0) @db.Decimal(5, 1)
  assist       Decimal?    @default(0) @db.Decimal(5, 1)
  autogol      Decimal?    @default(0) @db.Decimal(5, 1)
  altriBonus   Decimal?    @default(0) @db.Decimal(5, 1)
  titolare     Boolean     @default(false)
  riserva      Int?        @db.SmallInt
  Formazioni   Formazioni? @relation(fields: [idFormazione], references: [idFormazione], onDelete: NoAction, onUpdate: NoAction, map: "FK_Formazione_Giocatori")
  Calendario   Calendario  @relation(fields: [idCalendario], references: [idCalendario], onUpdate: NoAction, map: "FK_Voti_Calendario")
  Giocatori    Giocatori   @relation(fields: [idGiocatore], references: [idGiocatore], onUpdate: NoAction, map: "FK_Voti_Giocatori")

  @@index([voto], map: "IX_Voti_StatsGiocatori")
  @@index([idGiocatore], map: "IX_Voti_StatsGiocatori2")
}

model FlowNewSeasosn {
  id     Int       @id(map: "PK_FlowNewSeason") @default(autoincrement())
  idFase Int
  active Boolean   @default(false)
  data   DateTime? @default(now()) @db.Timestamptz(3)
}

model AlboTrofei_new {
  id         Int    @id(map: "PK_AlboTrofei_new") @default(autoincrement())
  stagione   String @db.VarChar(9)
  campionato String @db.VarChar(50)
  champions  String @db.VarChar(50)
  secondo    String @db.VarChar(50)
  terzo      String @db.VarChar(50)
}
